from flask import Flask, render_template, request
import subprocess  # Used to run LaTeX command
import os

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('form.html')  # Render the HTML form

@app.route('/submit', methods=['POST'])
def submit():
    # Get data from the form
    needs = request.form.getlist('needs[]')
    qualifications = request.form.getlist('qualifications[]')

    # Generate LaTeX code for the resume
    latex_code = generate_latex(needs, qualifications)

    # Save the LaTeX code to a .tex file
    with open("resume.tex", "w") as f:
        f.write(latex_code)

    # Use subprocess to run LaTeX (pdflatex or xelatex)
    try:
        subprocess.run(['pdflatex', 'resume.tex'], check=True)  # Or 'xelatex'
    except subprocess.CalledProcessError as e:
        return f"An error occurred while generating the PDF: {e}"

    # Return a success message or render the PDF (optional)
    return "Resume Generated Successfully!"

def generate_latex(needs, qualifications):
    # Start the LaTeX document
    latex_code = """
\\documentclass[a4paper,10pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage{geometry}
\\geometry{a4paper}
\\usepackage{enumitem}

\\begin{document}
\\title{Resume}
\\author{Generated by Flask}
\\date{\\today}
\\maketitle

\\section*{Objective}
% Objective section can be filled here, if needed.

\\section*{Skills}
\\begin{itemize}
    \\item Strong communication skills
    \\item Experience with dynamic table forms
    \\item LaTeX formatting and document generation
\\end{itemize}

\\section*{Needs and Qualifications}
\\begin{itemize}
"""

    # Add Needs and Qualifications dynamically
    for need, qualification in zip(needs, qualifications):
        latex_code += f"    \\item \\textbf{{Need:}} {need} \\textbf{{Qualification:}} {qualification}\n"

    # Close the LaTeX document
    latex_code += """
\\end{itemize}

\\end{document}
"""
    return latex_code

if __name__ == '__main__':
    app.run(debug=True)
